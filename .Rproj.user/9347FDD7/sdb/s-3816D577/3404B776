{
    "contents" : "#' Substitutes a subject's item mean subscale score for missing values.\n#'\n#' @param dataFrame A data frame containing the subscale to be scored.\n#' @param dataFrame A data frame containing the appropriate measure items.\n#' @param forwItems A vector of the items that should be forward-scored.\n#' @param revItems A vector of the items that should be reverse scored. Default is NULL in case there are no reverse-scored items.\n#' @param revInt A number (usually an integer, but does not have to be integer type) that will be used to reverse score the reverse-scored items by subtracting the subject-entered item value from the revInt. Default is NULL in case there are no reverse scored items.\n#' @param criterion A number indicating the maximum percent of items a subject can have missing in order to use mean substitution. Default is 50, but a warning is produced if the value is over 20 because there are more robust ways to deal with missing values than mean substitution!\n#' @return A data frame in which the NAs have been replaced with the item means for the given subscale (only for the subjects that meet the criterion).\n#' @export\n\nmeanSubstitute <- function(dataFrame, forwItems, revItems = NULL, revInt = NULL, criterion = 50){\n  #warns about the ills of mean substitution if the criterion is greater than 20%\n  if(criterion > 20) warning(\"Mean substitution may jeopardize the validity of inferences! Consider using it only in cases where a few items are missing, and use a more robust method for dealing with other missing data.\")\n\n  #creates a vector of all of the items in the subscale\n  allitems <- na.omit(c(forwItems, revItems))\n\n  #computes the maximum percent that can be missing without breaking the function: at least one item must be present for all subjects, or the function will break!\n  maxCriterion <- round(100*(length(allitems) - 1)/length(allitems), digits = 2)\n  #throws an error if the criterion is over the maximum\n  if(criterion >= maxCriterion) stop(paste(\"Cannot substitute a mean if all items are missing! For the current subscale, the criterion value must be below \", maxCriterion, \".\", sep = \"\"))\n  #gets a vector of rows indices in which less than or equal to the criterion percentage of the items are missing\n  rowsToReplace <- which(calcPercentMissing(dataFrame, items = allitems)[,2] <= criterion)\n\n  #if there are items to be reverse scored ....\n  if(!is.null(revItems) && length(revItems > 0L) && !is.na(revItems[1])){\n    #for each row that meets the missingness cutoff ...\n    for (row in rowsToReplace){\n      #calculates the person mean: creates a vector of all of the forward items, concatenates it with the revInt minus all of the reverse items, and computes the mean while ignoring NA values\n      personMean <- mean(as.numeric(c(dataFrame[row, forwItems], revInt - dataFrame[row, revItems])), na.rm = T)\n\n      #replaces all of the NAs for the forward items with the person mean\n      dataFrame[row, forwItems] <- replace(dataFrame[row, forwItems], is.na(dataFrame[row, forwItems]), personMean)\n      #replaces all of the NAs for the reverse-scored items with the reverse-scored person mean (i.e., the revInt minus the person mean)\n      dataFrame[row, revItems] <- replace(dataFrame[row, revItems], is.na(dataFrame[row, revItems]), revInt-personMean)\n    }\n\n  #if there aren't items to be reverse scored ....\n  }else{\n    #using only the forward scored items, create a vector of the person means for all subjects  (only those with the correct row indices will be used in the loop)\n    personMeans <- apply(dataFrame[, forwItems], 1, mean, na.rm = T)\n    #for each row, replace only the items that are NA with the person mean for that row\n    for (row in rowsToReplace){\n     dataFrame[row, forwItems] <- replace(dataFrame[row, forwItems], is.na(dataFrame[row, forwItems]), personMeans[row])\n      }\n  }\n  return(dataFrame)\n}\n",
    "created" : 1433719980993.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3596181406",
    "id" : "3404B776",
    "lastKnownWriteTime" : 1433629911,
    "path" : "~/research/samcleanR/R/meanSubstitute.R",
    "project_path" : "R/meanSubstitute.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}
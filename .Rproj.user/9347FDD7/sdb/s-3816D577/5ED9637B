{
    "contents" : "#' Reads in and cleans up the scoring lookup list.\n#'\n#'@param filename The location of the file containing the scoring lookup list. This function assumes that it is an Excel file formatted in a very specific way.\n#'@param myStartRow The row in the spreadshet that contains the headings.\n#'@return A list of lists, one list for each subscale, named with the subscale name and containing four sublists: measName, forwItems, revItems, and revInt.\n#'@export\n\n\ngetLookup <- function(filename, myStartRow = 1){\n  #reads in the workbook containing the scoring info as a \"workbook\" object\n  wb <- xlsx::loadWorkbook(filename)\n  #creates a character vector of all sheet names within the workbook, which correspond to the subscales that are listed in the lookup table\n  subscales <- names(xlsx::getSheets(wb))\n  #gets the number of subscales\n  numSubsc <- length(subscales)\n  #initializes an empty list into which to put the scoring info\n  listList = list()\n  #gives the list items the names of the subscales\n  listList[subscales] <- list(NULL)\n  #loops through the subscales that are in the file ...\n  for (i in 1:numSubsc){\n    #... reads in a data frame containing the given sheet, and assigns the data frame to the list element with the corresponding subscale name\n    listList[[subscales[i]]] <- xlsx::read.xlsx(filename, sheetName = subscales[i], header = T, startRow = myStartRow, stringsAsFactors = F)\n  }\n  #transforms all data frames within the list into lists\n  listList <- lapply(listList, as.list)\n  #goes through all subscales and strips NAs off of each column\n  for(i in 1:length(listList)){\n    #makes measName the first element of measName\n    listList[[i]]$measName <- listList[[i]]$measName[1]\n    #strips NAs off of forwItems\n    listList[[i]]$forwItems <- na.omit(listList[[i]]$forwItems)\n    #if the first element of revItems is NA, makes it an empty character vector; otherwise, strips off NAs\n    if(is.na(listList[[i]]$revItems[1])){\n      listList[[i]]$revItems <- character(length = 0L)\n    }else{\n      listList[[i]]$revItems <- na.omit(listList[[i]]$revItems)\n    }\n    #if the first element of revInt is NA, makes it an empty numeric vector; otherwise, strips off NAs\n    if(is.na(listList[[i]]$revInt[1])){\n      listList[[i]]$revInt <- numeric(length = 0L)\n    }else{\n      listList[[i]]$revInt <- na.omit(listList[[i]]$revInt)\n    }\n  }\n  #returns the list of lists\n  return(listList)\n}\n\n# My lookup file is currently located at C:/Users/Sam/Documents/research/samcleanR/scoring_lookup.xlsx\n",
    "created" : 1433719320952.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "427851276",
    "id" : "5ED9637B",
    "lastKnownWriteTime" : 1433719649,
    "path" : "~/research/samcleanR/R/getLookup.R",
    "project_path" : "R/getLookup.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}
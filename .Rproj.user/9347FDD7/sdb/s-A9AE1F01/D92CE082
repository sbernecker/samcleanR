{
    "contents" : "#' This scores a given subscale and outputs a data frame with one column containing all subjects' scores.\n#'\n#' @param dataframe A data frame containing the appropriate measure items.\n#' @param fornames A character vector of the names of the items that should be forward-scored.\n#' @param revnames A character vector of the names of the items that should be reverse scored. Default is NULL in case there are no reverse-scored items.\n#' @param revint A numeric scalar that will be used to reverse score the reverse-scored items by subtracting the entered item value from the revint. For example, if the items are on a 1-7 Likert scale, the revint would be 8 (because 8-1 is 7, 8-7 is 1, etc.); if the items are on a 0-4 Likert scale, the revint would be 4. In general the revint is the maximum of the Likert scale if it starts at zero, or is 1 greater than the max if it starts at 1. Default is NULL in case there are no reverse scored items.\n#' @idxofsubj A numeric index giving the position in the original data frame that contains the subject IDs. Default is 1. If the subject IDs are the row names of the original data frame, change this to 0.\n#' @return A data frame with one column containing the scores for each subject, with the subject IDs as the row names.\n#' @export\n\ncalcSubscale <- function(dataFrame, forwNames, revNames = NULL, revInt = NULL, idxOfSubj = 1){\n  #creates a data frame just of the items to be forward scored; note that this does not include subject names\n  forwScorDf <- dataFrame[,forwNames]\n  #creates\n  revScorDf <- data.frame(zeroes = rep(0,times=nrow(dataFrame)))\n  #checks if anything has been supplied to the revNames argument, and if so, checks whether the first element is something other than NA\n  if(!is.null(revNames) && !is.na(revNames[1])){\n    #creates a data frame just of the items to be reverse scored\n      revScorDf <- dataFrame[,revNames]\n      #reverse scores the reverse scored items by subtracting each value from the given number\n      revScorDf <- revInt - revScorDf\n  }\n  #sums across the forward and reverse scored items to create a total data frame; if there are no reverse-scored items, zero is added to each row\n  totalDf <- as.data.frame(rowSums(forwScorDf) + rowSums(revScorDf))\n  #assigns the subject names from the original data frame as the row names of the new data frame\n  rownames(totalDf) <- dataFrame[,idxOfSubj]\n  #returns the data frame\n  return(totalDf)\n}\n\n\n\n\n\n\n\n",
    "created" : 1433468457380.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1281026230",
    "id" : "D92CE082",
    "lastKnownWriteTime" : 1433541170,
    "path" : "~/research/samcleanR/R/calcSubscale.R",
    "project_path" : "R/calcSubscale.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}
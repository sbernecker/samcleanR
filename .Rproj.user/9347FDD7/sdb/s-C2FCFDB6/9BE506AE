{
    "contents" : "#' Centers longitudinal measurements within and between subjects, as described by Bolger and Laurenceau (2013).\n#'\n#' @param dataframe A data frame containing the uncentered variables. May be wide or long.\n#' @param measures A vector of the measures/subscales to be centered. FOR WIDE FORMAT, must be a character vector where the names uniquely match the appropriate column names of the data frame. For example, if the data were in wide format and mood was measured on multiple occasions labeled \"Mood1\", \"Mood2,\" \"Mood3,\" etc., the corresponding string could be \"Mood.\" But if there were two different measures with mood in the title, like \"MoodHusband1,\" \"MoodHusband2,\" \"MoodWife1\", \"MoodWife2\", etc., the argument \"Mood\" would be insufficient because it would match both of these measures; you would need to include \"MoodHusband\" and \"MoodWife\" as separate strings in the vector. FOR LONG FORMAT, can be a vector of indices of the columns containing the measures/subscales or a character vector in which names EXACTLY match the column names.\n#' @param format The format of the input data frame, either \"long\" or \"wide\".\n#' @param idxOfSubj The column index in the data frame that contains subject IDs. Default is 1.\n#' @return A data frame containing the original data as well as the requested measures grand-mean centered, between-person centered, and within-person centered. Measures labeled \"gmc\" are grand-mean centered, measures labeled \"cb\" are between-persons centered (i.e., are the average value of the grand-mean centered score for each subject), and measures labeled \"cw\" are within-person centered (i.e., a subject's deviation from that person's own average).\n#' @export\n\ncenterer <- function(dataframe, measures, format, idxOfSubj = 1){\n  if (format == \"wide\"){\n    for (i in 1:length(measures)){\n      #get the column indices of the measures/subscale\n      subsCols <- grep(measures[i], colnames(dataframe), ignore.case = TRUE)\n      #find the grand mean of all measurements for all rows/subjects (a single value)\n      grandMean <- mean(as.matrix(dataframe[,subsCols]), na.rm = TRUE)\n      #grand mean center every data point--this creates a new data frame\n      gmCentered <- dataframe[,subsCols] - grandMean\n      #name the columns of the new data frame with the old data frame plus \"gmc\" for \"grand mean centered\"\n      names(gmCentered) <- paste(names(dataframe[,subsCols]), \"_gmc\", sep = \"\")\n      #get the person mean of the grand-mean centered scores ... this creates a single vector of person means called \"cb\" for \"centered between\"\n      cb <- apply(gmCentered, 1, mean, na.rm = TRUE)\n      #center occasions around within-person means--makes a new data frame\n      cw <- gmCentered - cb\n      #name the columns of the new data frame with the old data frame plus \"cw\" for \"centered within\"\n      names(cw) <- paste(names(dataframe[,subsCols]), \"_cw\", sep = \"\")\n\n      #combine all centered versions\n      dataframe <- cbind(dataframe, gmCentered, cb, cw)\n      #rename the cb column with the measure name (otherwise, between-centered columns for all measures would have the same name)\n      names(dataframe)[which(names(dataframe)==\"cb\")] <- paste(measures[i], \"cb\", sep = \"_\")\n    }\n  }else if (format == \"long\"){\n    #sorts data frame by subject\n    dataframe <- dataframe[order(dataframe[idxOfSubj]),]\n    #grand mean centers all columns including the given measures--creates a data frame\n    gmCentered <- scale(dataframe[measures], center = T, scale = F)\n    #adds the \"subjects\" column to the grand-mean centered data frame\n    gmCentered <- cbind(dataframe[idxOfSubj], gmCentered)\n    #renames columns with \"gmc\"\n    names(gmCentered)[-1] <- paste(colnames(dataframe[measures]), \"gmc\", sep = \"_\")\n    #gets person means of those grand means (creates a data frame)\n    cb <- aggregate(gmCentered[-1], by = list(gmCentered[[1]]), FUN = mean, na.rm = T)\n    #gets the character name of the subject vector for future renaming/matching\n    subjChar <- names(dataframe[idxOfSubj])\n    #renames the \"group\" variable in the aggregated cb data frame with the subject name\n    names(cb)[1] <- subjChar\n    #renames the other columns with \"cb\"\n    names(cb)[-1] <- paste(colnames(dataframe[measures]), \"cb\", sep = \"_\")\n    #merges the two data frames by subject name\n    centeredDf <- merge(gmCentered, cb, by = subjChar, all = T)\n    cbcols <- grep(\"_cb\", colnames(centeredDf))\n    #center within person by subtracting individual means from grand-centered scores\n    cw <- gmCentered[-1] - centeredDf[,cbcols]\n    names(cw) <- paste(colnames(dataframe[measures]), \"cw\", sep = \"_\")\n    #add all centered columns to new data frame\n    dataframe <- cbind(dataframe, centeredDf[-1], cw)\n  }else{\n    stop(\"Please specify a valid format for the input data frame.\")\n  }\n  return(dataframe)\n}\n",
    "created" : 1434299277282.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "803028994",
    "id" : "9BE506AE",
    "lastKnownWriteTime" : 1434299389,
    "path" : "~/research/samcleanR/R/centerer.R",
    "project_path" : "R/centerer.R",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "type" : "r_source"
}
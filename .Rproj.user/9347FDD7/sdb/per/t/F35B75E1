{
    "contents" : "#' Read in an Excel workbook and produce a list of data frames, one for each sheet.\n#'\n#' @param filename The name/path of an Excel file (xls or xlsx)\n#' @param mystartrow The row containing the variable names (i.e., headings). Defaults to row 3 because that's what I need for this project!\n#' @return A list of data frames, one for each sheet, with the name of the list element being the name of the sheet.\n#' @export\n\nworkbookToDfList <- function(filename, mystartrow = 3){\n  #reads in the workbook as a \"workbook\" object\n  wb <- xlsx::loadWorkbook(filename)\n  #creates a character vector of all sheet names within the workbook; I need to use \"names\" because the result of \"getSheets\" is a weird object (either a list or another weird Java-y thing, I forget)\n  sheetnames <- names(xlsx::getSheets(wb))\n  #creates a character vector of the sheet names that do NOT contain the word \"check\"; the argument ignore case does what it says on the tin, the argument value is set to true so that it returns a vector of the actual contents that match the pattern (if false, would return indices), invert returns the items that do NOT match the pattern\n  measures <- grep(\"check\", sheetnames, ignore.case = T, value = T, invert = T)\n  #initializes an empty list into which to put the data frames\n  dfList = list()\n  #gives the list items the names of the measures\n  dfList[measures] <- list(NULL)\n  #loops through the measures that are in the file ...\n  for (i in 1:(length(measures))){\n    #... and assigns a data frame containing the given sheet to the list element with the corresponding measure name\n    dfList[[measures[i]]] <- xlsx::read.xlsx(filename, sheetName = measures[i], header = T, startRow = mystartrow, stringsAsFactors = F)\n  }\n  #returns the list of data frames\n  return(dfList)\n}\n",
    "created" : 1433449359621.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "720869125",
    "id" : "F35B75E1",
    "lastKnownWriteTime" : 1433459148,
    "path" : "~/research/samcleanR/R/workbookToDfList.R",
    "project_path" : "R/workbookToDfList.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}